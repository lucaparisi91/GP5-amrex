=== If no file names and line numbers are shown below, one can run
            addr2line -Cpfie my_exefile my_line_address
    to convert `my_line_address` (e.g., 0x4a6b) into file name and line number.
    Or one can use amrex/Tools/Backtrace/parse_bt.py.

=== Please note that the line number reported by addr2line may not be accurate.
    One can use
            readelf -wl my_exefile | grep my_line_address'
    to find out the offset for that line.

 0: /home/luca/miniconda3/envs/stats/lib/python3.10/site-packages/gpAmreX.cpython-310-x86_64-linux-gnu.so(_ZN5amrex11BLBackTrace20print_backtrace_infoEP8_IO_FILE+0x45) [0x7f75f29f7985]

 1: /home/luca/miniconda3/envs/stats/lib/python3.10/site-packages/gpAmreX.cpython-310-x86_64-linux-gnu.so(_ZN5amrex11BLBackTrace7handlerEi+0x362) [0x7f75f29f98d2]

 2: /lib/x86_64-linux-gnu/libc.so.6(+0x430c0) [0x7f76013110c0]

 3: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(H5P_close+0x10f) [0x7f75f23232cf]

 4: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(H5I_dec_ref+0x88) [0x7f75f22a4f78]

 5: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(H5D_close+0x48a) [0x7f75f21ec42a]

 6: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(H5VL__native_dataset_close+0xd) [0x7f75f2440d1d]

 7: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(H5VL_dataset_close+0xa9) [0x7f75f242a3b9]

 8: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(+0xdf41d) [0x7f75f21e741d]

 9: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(H5I_dec_ref+0x88) [0x7f75f22a4f78]

10: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(H5I_dec_app_ref+0x2b) [0x7f75f22a503b]

11: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(H5I_dec_app_ref_always_close+0x31) [0x7f75f22a5111]

12: /home/luca/opt/hdf5/1.12.1/lib/libhdf5.so.200(H5Dclose+0x52) [0x7f75f21c0f62]

13: /home/luca/miniconda3/envs/stats/lib/python3.10/site-packages/gpAmreX.cpython-310-x86_64-linux-gnu.so(_ZN5amrex37WriteMultiLevelPlotfileHDF5SingleDsetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRKNS_6VectorIPKNS_8MultiFabESaISB_EEERKNS8_IS5_SaIS5_EEERKNS8_INS_8GeometryESaISK_EEEdRKNS8_IiSaIiEEERKNS8_INS_7IntVectESaIST_EEES7_S7_S7_S7_SJ_+0x112b) [0x7f75f2a4eedb]

14: /home/luca/miniconda3/envs/stats/lib/python3.10/site-packages/gpAmreX.cpython-310-x86_64-linux-gnu.so(_ZNK2gp6levelsINS_9realLevelEE4saveERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x336) [0x7f75f2904ab6]

15: /home/luca/miniconda3/envs/stats/lib/python3.10/site-packages/gpAmreX.cpython-310-x86_64-linux-gnu.so(+0x8371d) [0x7f75f28e671d]

16: /home/luca/miniconda3/envs/stats/lib/python3.10/site-packages/gpAmreX.cpython-310-x86_64-linux-gnu.so(+0x90ae3) [0x7f75f28f3ae3]

17: python(+0x17ffa4) [0x5600197e1fa4]

18: python(_PyObject_MakeTpCall+0x15e) [0x5600197a452e]

19: python(+0xaea74) [0x560019710a74]

20: python(+0x1052a5) [0x5600197672a5]

21: python(+0x18f742) [0x5600197f1742]

22: python(+0x1049f3) [0x5600197669f3]

23: python(+0x18f742) [0x5600197f1742]

24: python(+0x18fc9b) [0x5600197f1c9b]

25: python(+0x104425) [0x560019766425]

26: python(+0x18f742) [0x5600197f1742]

27: python(+0x1049f3) [0x5600197669f3]

28: python(+0x18f742) [0x5600197f1742]

29: python(+0x18fd4e) [0x5600197f1d4e]

30: python(_PyObject_Call+0x20a) [0x5600197a9faa]

31: python(_PyEval_EvalFrameDefault+0x26e4) [0x560019845774]

32: python(+0x18f742) [0x5600197f1742]

33: python(_PyObject_FastCallDictTstate+0x6a) [0x5600197e205a]

34: python(+0x1981d5) [0x5600197fa1d5]

35: python(_PyObject_MakeTpCall+0x15e) [0x5600197a452e]

36: python(_PyEval_EvalFrameDefault+0x3bb) [0x56001984344b]

37: python(+0x18f742) [0x5600197f1742]

38: python(+0x18fd4e) [0x5600197f1d4e]

39: python(_PyObject_Call+0x20a) [0x5600197a9faa]

40: python(_PyEval_EvalFrameDefault+0x26e4) [0x560019845774]

41: python(+0x18f742) [0x5600197f1742]

42: python(_PyObject_FastCallDictTstate+0x6a) [0x5600197e205a]

43: python(+0x1981d5) [0x5600197fa1d5]

44: python(_PyObject_MakeTpCall+0x15e) [0x5600197a452e]

45: python(_PyEval_EvalFrameDefault+0x3bb) [0x56001984344b]

46: python(+0x18f742) [0x5600197f1742]

47: python(+0x18fd4e) [0x5600197f1d4e]

48: python(_PyObject_Call+0x20a) [0x5600197a9faa]

49: python(_PyEval_EvalFrameDefault+0x26e4) [0x560019845774]

50: python(+0x18f742) [0x5600197f1742]

51: python(_PyObject_FastCallDictTstate+0x6a) [0x5600197e205a]

52: python(+0x1981d5) [0x5600197fa1d5]

53: python(_PyObject_MakeTpCall+0x15e) [0x5600197a452e]

54: python(_PyEval_EvalFrameDefault+0x3bb) [0x56001984344b]

55: python(+0x18f742) [0x5600197f1742]

56: python(+0x1049f3) [0x5600197669f3]

57: python(+0x18f742) [0x5600197f1742]

58: python(+0x1049f3) [0x5600197669f3]

59: python(+0x18f742) [0x5600197f1742]

60: python(_PyObject_FastCallDictTstate+0x6a) [0x5600197e205a]

61: python(+0x198029) [0x5600197fa029]

62: python(+0x15e311) [0x5600197c0311]

63: python(_PyObject_MakeTpCall+0x204) [0x5600197a45d4]

